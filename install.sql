CREATE TABLE IF NOT EXISTS questions (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, test_id INT, question VARCHAR(4096), answer VARCHAR(4096), weight INT);
CREATE TABLE IF NOT EXISTS chapters (chapter INT, title VARCHAR(64));
CREATE TABLE IF NOT EXISTS tests (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, name VARCHAR(64), chapter INT, explanation TEXT, admingrade INT);
CREATE TABLE IF NOT EXISTS readings (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, title VARCHAR(64), chapter INT, text TEXT);
CREATE TABLE IF NOT EXISTS users (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, name VARCHAR(128), email VARCHAR(64), username VARCHAR(64), password VARCHAR(128), timezone FLOAT, chapter INT, points INT, salt VARCHAR(40));
CREATE TABLE IF NOT EXISTS scores (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, user_id INT, score INT, test_id INT, time_start INT, firstscore INT, chapter INT);
CREATE TABLE IF NOT EXISTS answers (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, user_id INT, test_id INT, question_id INT, answer VARCHAR(1024), score_id INT, score INT);
CREATE TABLE IF NOT EXISTS locks (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, ip VARCHAR(16), time INT, action VARCHAR(16), num INT);
CREATE TABLE IF NOT EXISTS pages (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, name VARCHAR(32), text TEXT);
CREATE TABLE IF NOT EXISTS news (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, title VARCHAR(32), subtitle VARCHAR(32), text TEXT);
CREATE TABLE IF NOT EXISTS user_groups (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, user_id INT, `group` VARCHAR(16));
